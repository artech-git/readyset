---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: readyset-server
  namespace: {{ required "You must pass a namespace" (.Release.Namespace | quote) }}
  labels: {{ include "readyset.labels" . | nindent 4 }}
spec:
  serviceName: readyset-server
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels: {{ include "readyset.selectorLabels" . | nindent 6 }}
  volumeClaimTemplates:
    - metadata:
        name: state
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.readyset.server.resources.requests.storage | default "50Gi" }}
        storageClassName: {{ .Values.kubernetes.storageClass | default ( include "readyset.defaultStorageClass" . ) }}
  template:
    metadata:
      labels: {{ include "readyset.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 15
      serviceAccountName: readyset-adapter
      containers:
        - name: consul-agent
          image: hashicorp/consul:1.15.2
          volumeMounts:
            - mountPath: /usr/src/app/entrypoint.sh
              name: init
              subPath: entrypoint.sh
          command: [
            "/bin/sh"
          ]
          args:
            - "/usr/src/app/entrypoint.sh"
          ports:
          - containerPort: 8500
            name: http
            protocol: TCP
          - containerPort: 8301
            name: serflan-tcp
            protocol: TCP
          - containerPort: 8301
            name: serflan-udp
            protocol: UDP
          - containerPort: 8600
            name: dns-tcp
            protocol: TCP
          - containerPort: 8600
            name: dns-udp
            protocol: UDP
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONSUL_SERVER_NAMESPACE
              value: "{{ .Values.readyset.namespace | default .Release.Namespace }}"
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -ec
              - |
                curl http://127.0.0.1:8500/v1/health/node/$(hostname) \
                2>/dev/null | grep -E '".+"'
        - name: readyset-server
          image: {{ default ( include "readyset.server.imageDefault" . ) .Values.readyset.server.imageOverride }}
          env:
            # ReadySet Deployment Name (Unique per Consul Cluster)
            - name: DEPLOYMENT
              value: "{{ required "readyset.deployment is a required value" .Values.readyset.deployment }}"
            # ReadySet Server Configs
            - name: MIN_WORKERS
              value: "1"
            # ReadySet Server Memory Limit, if process heap exceed this value (bytes)
            # we will perform evictions. Given this container will only be dedicated
            # to ReadySet Server we assing 95% of the configured memory.
            - name: READYSET_MEMORY_LIMIT
              value: {{ mulf 0.95 ( include "readyset.server.memory" . ) | floor | toJson | quote }}
            # Await Consul Leader Election Before Launching
            - name: INIT_REQUIRE_LEADER
              value: "1"
            # Database ReadySet is proxying to
            - name: UPSTREAM_DB_URL
              valueFrom:
                secretKeyRef:
                  name: readyset-upstream-database
                  key: url
            - name: VOLUME_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: EXTERNAL_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: LOG_FORMAT
              value: "json"
            # Identify this as a Helm deployment to TelemetryReporter
            - name: DEPLOYMENT_ENV
              value: "helm"
            - name: AUTHORITY_ADDRESS
              value: "{{ ( include "readyset.authority_address" . ) }}"
            - name: AUTHORITY
              value: "consul"
            - name: STORAGE_DIR
              value: "/state"
            - name: LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: MEMORY_CHECK_EVERY
              value: "1"
            - name: PROMETHEUS_METRICS
              value: "true"
            {{- if .Values.readyset.server.replication_tables }}
            - name: REPLICATION_TABLES
              value: {{ .Values.readyset.server.replication_tables | quote }}
            {{- end }}
            {{- if .Values.readyset.server.statement_logging }}
            - name: STATEMENT_LOGGING
              value: {{ .Values.readyset.server.statement_logging | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: /state
              name: state
          # We configure memory requests & limits with the same value to avoid
          # Kubernetes OOM Kills. Also, we do not configure CPU limits to avoid
          # Kubernetes CPU throttling.
          resources:
            limits:
              memory: {{ ( include "readyset.server.memory" . ) }}
            requests:
              cpu: {{ ( include "readyset.server.cpu" . ) }}
              memory: {{ ( include "readyset.server.memory" . ) }}
          ports:
            - containerPort: {{ ( include "readyset.server.httpPort" . ) }}
              name: monitoring
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -ec
              - |
                curl --fail http://127.0.0.1:{{ ( include "readyset.server.httpPort" . ) }}/metrics
      volumes:
        - configMap:
            items:
            - key: entrypoint.sh
              path: entrypoint.sh
            name: readyset-consul-agent-cm
          name: init
        - configMap:
            items:
            - key: entrypoint.sh
              path: entrypoint.sh
            name: readyset-consul-agent-cm
          name: state
